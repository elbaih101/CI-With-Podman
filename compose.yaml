services:
  selenium-hub:
    image: docker.io/selenium/hub:latest
    container_name: selenium-hub
    networks: [ci]
    ports:
      - "4443:4443"
      - "4442:4442"
      - "4444:4444"

    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://localhost:4444/status"]
      interval: 10s
      timeout: 5s
      retries: 30

  chrome:
    image: docker.io/selenium/node-chrome:latest
    container_name: node-chrome
    networks: [ci]
    shm_size: "2g"
    depends_on:
      selenium-hub:
        condition: service_healthy
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  # firefox:
  #   image: docker.io/selenium/node-firefox:4.23.0
  #   container_name: node-firefox
  #   networks: [ci]
  #   shm_size: "2g"
  #   depends_on:
  #     selenium-hub:
  #       condition: service_healthy
  #   environment:
  #     - SE_EVENT_BUS_HOST=selenium-hub
  #     - SE_EVENT_BUS_PUBLISH_PORT=4442
  #     - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  appium1:
        image: docker.io/appium/appium:latest
        container_name: appium1
        networks: [ci]
        # network_mode: host
        # to make my host adb devices visible to the container 
        # 1. start the adb dserver
        # 2.connectto the host server   
        #3. in the code make sure to set the remote adb host capability to the "host.docker.internal"    
        command: >
          sh -c " adb start-server 
          && adb connect host.docker.internal:5037 
          && adb devices
          && appium --config /appium/appium1.yml"
# mounting appium configuration file
        volumes:
          - ./appium/appium1.yml:/appium/appium1.yml:Z
        ports: ["4723:4723"]
        # added this to make the host ip visible to the container so i can connect the host adb devices to the container
        extra_hosts:
         - "host.docker.internal:host-gateway"  #to make devices up on the host visible
        # running as privilaged to allow usb devics to be visible for the container 
        privileged: true
        # added this to make the tcp for adb be able to see host devies
        environment:
         - ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
         - ANDROID_ADB_SERVER_PORT=5037
         - ADB_SERVER_SOCKET=tcp:host.docker.internal:5037


  appium2:
        image: docker.io/appium/appium:latest
        container_name: appium2
        networks: [ci]
        # network_mode: host

        # to make my host adb devices visible to the container 
        # 1. start the adb dserver
        # 2.connectto the host server
        command: >
          sh -c " adb start-server 
          && adb connect host.docker.internal:5037 
          && adb devices
          && appium --config /appium/appium2.yml"
        volumes:
          - ./appium/appium2.yml:/appium/appium2.yml:Z
        ports: ["4733:4733"]
        # added this to make the host ip visible to the container so i can connect the host adb devices to the container
        extra_hosts:
          - "host.docker.internal:host-gateway"
        # running as privilaged to allow usb devics to be visible for the container
        privileged: true
        # added this to make the tcp for adb be able to see host devies
        environment:
         - ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
         - ANDROID_ADB_SERVER_PORT=5037
         - ADB_SERVER_SOCKET=tcp:host.docker.internal:5037

  appium-relay-1:
    image: docker.io/selenium/node-base:latest
    container_name: appium-relay-1
    networks: [ci]
    depends_on:
      selenium-hub:
        condition: service_healthy
      appium1:
        condition: service_started
    volumes:
      - ./relay/node1.toml:/opt/selenium/node.toml:Z
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_OPTS=--config /opt/selenium/node.toml
      

  appium-relay-2:
    image: docker.io/selenium/node-base:latest
    container_name: appium-relay-2
    networks: [ci]
    depends_on:
      selenium-hub:
        condition: service_healthy
      appium2:
        condition: service_started
    volumes:
      - ./relay/node2.toml:/opt/selenium/node.toml:Z
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_OPTS=--config /opt/selenium/node.toml

  # android-emulator:
  #       image: docker.io/halimqarroum/docker-android:api-33
  #       container_name: android-emulator
  #       privileged: true
  #       networks: [ci]
  #       ports:
  #         - "5555:5555"   
  #       command: [ "emulator", "-no-window","-no-audio", "-gpu", "swiftshader_indirect"]
  #       healthcheck:
  #         test: ["CMD", "adb", "shell", "getprop", "sys.boot_completed"]
  #         interval: 30s
  #         timeout: 10s
  #         retries: 40

  # android-emulator:
  #   # Use an image with Appium/AVD support
  #   image: budtmo/docker-android:emulator_12.0
  #   container_name: android-emulator
  #   privileged: true
  #   networks: [ci]
      # privileged: true
  #   ports:
  #     - "6080:6080" # VNC port to view the emulator in a browser
  #     - "5554:5554"
  #     - "5555:5555"
  #   environment:
  #     - DEVICE=Samsung Galaxy S10
  #     - APPIUM=false # We are running Appium in a separate container
  #     - START_APPIUM=false

  #   healthcheck:
  #     test: ["CMD", "adb", "shell", "getprop", "sys.boot_completed"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 40

networks:
      ci:
        driver: bridge
        external: true    
        
    
